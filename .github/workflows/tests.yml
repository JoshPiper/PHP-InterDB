name: Unit Testing
on: push

env:
  COMPOSER_ALLOW_SUPERUSER: 1

jobs:
  phpunit:
    runs-on: ubuntu-latest
#    strategy:
#      max-parallel: 1
#      fail-fast: true
#      matrix:
#        php: [7.1, 7.2, 7.3, 7.4]
#    container: php:${{ matrix.php }}-alpine
#    container: docker:stable
    container: php:7.1-alpine
    services:
      mysql:
        image:
          mysql:5.6
        env:
          MYSQL_ROOT_PASSWORD: ci
          MYSQL_DATABASE: ci
          MYSQL_USER: ci
          MYSQL_PASSWORD: ci
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3 --hostname mysql
    steps:
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJson(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Install APK Dependencies
        run: apk update && apk add -q git unzip mysql-client
      - name: Install PHP Extensions
        run: docker-php-ext-install pdo_mysql
      - name: Install Composer
        id: composer-install
        run: |
          wget -O installer https://getcomposer.org/installer
          php installer --install-dir=/usr/local/bin --filename=composer
          echo "::set-output name=cache-dir::$(composer global config cache-files-dir)"
      - name: Checkout
        uses: actions/checkout@v1
      - name: Restore Composer Cache
        uses: actions/cache@v1
        with:
          key: composer-${{ runner.os }}-${{ hashFiles('**/composer.lock') }}
          path: ${{ steps.composer-install.outputs.cache-dir }}
          restore-keys: composer-${{ runner.os }}- composer--
      - name: Update PHPUnit
        run: composer update --no-ansi --with-dependencies phpunit/phpunit
      - name: Install Composer Libraries
        run: composer install --no-ansi
#      - run: docker ps
#      - run: docker network inspect ${{ job.container.network }}
#      - run: ping -c4 mysql
#      - run: mysql --host mysql -uroot -pci -e "SHOW DATABASES"
      - name: Run Tests
        run: composer test
        env:
          MYSQL_HOST: mysql
          MYSQL_DATABASE: ci
          MYSQL_USER: ci
          MYSQL_PASSWORD: ci